{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Audience Matters Sistema de sele\u00e7\u00e3o de filmes com maiores notas de audi\u00eancia do site RottenTomatoes Vis\u00e3o Geral Hoje em dia h\u00e1 uma grande facilidade de acesso a plataformas de streaming para assistir filmes e s\u00e9ries e com isso existe tamb\u00e9m a dificuldade de saber qual filme \u00e9 melhor avaliado pela audi\u00eancia, j\u00e1 que essas plataformas possuem um sistema de recomenda\u00e7\u00e3o baseado em uma avalia\u00e7\u00e3o bin\u00e1ria e n\u00e3o uma nota. Assim, ficamos indecisos na hora de escolher algo para assistir. Com essa necessidade, a proposta do nosso trabalho \u00e9 realizar a captura de avalia\u00e7\u00f5es de audi\u00eancia de todos os gen\u00earos de filmes atrav\u00e9s do site RottenTomatoes RottenTomatoes O site RottenTomatoes tem a finalidade de classificar filmes em um sistema de avali\u00e7\u00e3o n\u00e3o-bin\u00e1rio, por meio de notas. Por\u00e9m seu principal foco \u00e9 a avalia\u00e7\u00e3o profissional (cr\u00edticos de cinema e TV). E a visualiza\u00e7\u00e3o das notas de audi\u00eancia \u00e9 dificultada. Motiva\u00e7\u00e3o Por essas difuldades propomos criar um sistema de captura de avalia\u00e7\u00e3o da audi\u00eancia sobre diversos gen\u00earos de filmes no site RottenTomatoes. Comandos mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Esquema do Projeto mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#audience-matters","text":"Sistema de sele\u00e7\u00e3o de filmes com maiores notas de audi\u00eancia do site RottenTomatoes","title":"Audience Matters"},{"location":"#visao-geral","text":"Hoje em dia h\u00e1 uma grande facilidade de acesso a plataformas de streaming para assistir filmes e s\u00e9ries e com isso existe tamb\u00e9m a dificuldade de saber qual filme \u00e9 melhor avaliado pela audi\u00eancia, j\u00e1 que essas plataformas possuem um sistema de recomenda\u00e7\u00e3o baseado em uma avalia\u00e7\u00e3o bin\u00e1ria e n\u00e3o uma nota. Assim, ficamos indecisos na hora de escolher algo para assistir. Com essa necessidade, a proposta do nosso trabalho \u00e9 realizar a captura de avalia\u00e7\u00f5es de audi\u00eancia de todos os gen\u00earos de filmes atrav\u00e9s do site RottenTomatoes","title":"Vis\u00e3o Geral"},{"location":"#rottentomatoes","text":"O site RottenTomatoes tem a finalidade de classificar filmes em um sistema de avali\u00e7\u00e3o n\u00e3o-bin\u00e1rio, por meio de notas. Por\u00e9m seu principal foco \u00e9 a avalia\u00e7\u00e3o profissional (cr\u00edticos de cinema e TV). E a visualiza\u00e7\u00e3o das notas de audi\u00eancia \u00e9 dificultada.","title":"RottenTomatoes"},{"location":"#motivacao","text":"Por essas difuldades propomos criar um sistema de captura de avalia\u00e7\u00e3o da audi\u00eancia sobre diversos gen\u00earos de filmes no site RottenTomatoes.","title":"Motiva\u00e7\u00e3o"},{"location":"#comandos","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Comandos"},{"location":"#esquema-do-projeto","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Esquema do Projeto"},{"location":"entrega01/","text":"Planejamento No inicio do projeto criamos planner com atividades para serem executadas em formato KanBan. Al\u00e9m disso, nos organizamos no github, criando issues para acompanhar o desenvolvimento do software e para que todos os integrantes do grupo tivesse visibilidade do que estava sendo feito e o que faltava desenvolver. Dificuldades Um obst\u00e1culo que encontramos foi a p\u00e1gina que fazemos o scraping estar fora do ar/em manuten\u00e7\u00e3o, atrapalhando o desenvolvimento e os testes. Outra dificuldade que tivemos foi desenvolver em threads, apesar de conseguir executar com v\u00e1rias threads para acelerar a execu\u00e7\u00e3o, o arquivo gerado no final sa\u00eda todo desorganizado e faltando informa\u00e7\u00f5es, com isso limitamos a execu\u00e7\u00e3o e apenas 5 threads.","title":"Planejamento e Dificuldades"},{"location":"entrega01/#planejamento","text":"No inicio do projeto criamos planner com atividades para serem executadas em formato KanBan. Al\u00e9m disso, nos organizamos no github, criando issues para acompanhar o desenvolvimento do software e para que todos os integrantes do grupo tivesse visibilidade do que estava sendo feito e o que faltava desenvolver.","title":"Planejamento"},{"location":"entrega01/#dificuldades","text":"Um obst\u00e1culo que encontramos foi a p\u00e1gina que fazemos o scraping estar fora do ar/em manuten\u00e7\u00e3o, atrapalhando o desenvolvimento e os testes. Outra dificuldade que tivemos foi desenvolver em threads, apesar de conseguir executar com v\u00e1rias threads para acelerar a execu\u00e7\u00e3o, o arquivo gerado no final sa\u00eda todo desorganizado e faltando informa\u00e7\u00f5es, com isso limitamos a execu\u00e7\u00e3o e apenas 5 threads.","title":"Dificuldades"},{"location":"entrega02/","text":"Processos, threads e escalonamento Processadores de contexto m\u00faltiplo fornecem conjuntos de registros m\u00faltiplos para multiplexar v\u00e1rios threads em um pipeline de processador, a fim de tolerar essas latentes de comunica\u00e7\u00e3o e sincroniza\u00e7\u00e3o. V\u00e1rios conjuntos de registros, incluindo v\u00e1rios ponteiros de instru\u00e7\u00e3o, permitem que o estado de v\u00e1rios threads sejam carregados e prontos para serem executados ao mesmo tempo. [Fiske, 1995] Processos Um processo \u00e9 basicamente um programa em execu\u00e7\u00e3o. Associado a cada processo est\u00e1 o seu espa\u00e7o de endere\u00e7amento e uma lista de posi\u00e7\u00f5es de mem\u00f3ria que este processo pode ler e escrever. [Faria, 2013] Threads Uma execu\u00e7\u00e3o de instru\u00e7\u00f5es que pode ser executado em paralelo em v\u00e1rios processos ou concorrente atraves de um processo. Existe dois tipos distintas de Threads: User-level = Podemos utilizar no c\u00f3digo (essa que usamos para fazer esse projeto) Kernel-level = Threads que s\u00e3o low-level e s\u00e3o diretamente ligadas aos processos do sistema operacional. Escalonamento de processos Atividade respons\u00e1vel pela aloca\u00e7\u00e3o dos processos aos processadores.[Maciel, 2013] Porque usamos Multithreads ao inves do Multiprocessors? Para o projeto verificamos que cada genero escolhido pelo usu\u00e1rio tem pelo menos 1000 filmes. Executando esse programa de forma linear demoraria horas para finalizar a execu\u00e7\u00e3o. Porque utilizamos Multithreads? Pois, multiprocessadores est\u00e1 totalmente relacionado aos cores da m\u00e1quina e os m\u00faltiplos processos do Python tem muito overhead. Ent\u00e3o utilizamos Multithreaded Web Scraping, pois pode executar tasks concorrentes atrav\u00e9s de m\u00faltiplas threads no mesmo processo, e essas tasks podem ser executadas enquanto o Python est\u00e1 sendo executado, e essas threadss\u00e3o executadas as\u00edncronamente. with ThreadPoolExecutor(max_workers=5) as executor: futures = [executor.submit(scrapping_movie_page, url) for url in movieList] results = [] for result in futures: results.append(result) No c\u00f3digo definimos que o c\u00f3dio iria rodar com 5 threads, definido pelo max_workers. Depois da execu\u00e7\u00e3o do c\u00f3digo, verificamos o n\u00famero de threads que est\u00e3o rodando e o gerenciamento de mem\u00f3ria em no sistema operacional Arch.","title":"Segunda Entrega - Processos, threads e escalonamento"},{"location":"entrega02/#processos-threads-e-escalonamento","text":"Processadores de contexto m\u00faltiplo fornecem conjuntos de registros m\u00faltiplos para multiplexar v\u00e1rios threads em um pipeline de processador, a fim de tolerar essas latentes de comunica\u00e7\u00e3o e sincroniza\u00e7\u00e3o. V\u00e1rios conjuntos de registros, incluindo v\u00e1rios ponteiros de instru\u00e7\u00e3o, permitem que o estado de v\u00e1rios threads sejam carregados e prontos para serem executados ao mesmo tempo. [Fiske, 1995]","title":"Processos, threads e escalonamento"},{"location":"entrega02/#processos","text":"Um processo \u00e9 basicamente um programa em execu\u00e7\u00e3o. Associado a cada processo est\u00e1 o seu espa\u00e7o de endere\u00e7amento e uma lista de posi\u00e7\u00f5es de mem\u00f3ria que este processo pode ler e escrever. [Faria, 2013]","title":"Processos"},{"location":"entrega02/#threads","text":"Uma execu\u00e7\u00e3o de instru\u00e7\u00f5es que pode ser executado em paralelo em v\u00e1rios processos ou concorrente atraves de um processo. Existe dois tipos distintas de Threads: User-level = Podemos utilizar no c\u00f3digo (essa que usamos para fazer esse projeto) Kernel-level = Threads que s\u00e3o low-level e s\u00e3o diretamente ligadas aos processos do sistema operacional.","title":"Threads"},{"location":"entrega02/#escalonamento-de-processos","text":"Atividade respons\u00e1vel pela aloca\u00e7\u00e3o dos processos aos processadores.[Maciel, 2013]","title":"Escalonamento de processos"},{"location":"entrega02/#porque-usamos-multithreads-ao-inves-do-multiprocessors","text":"Para o projeto verificamos que cada genero escolhido pelo usu\u00e1rio tem pelo menos 1000 filmes. Executando esse programa de forma linear demoraria horas para finalizar a execu\u00e7\u00e3o. Porque utilizamos Multithreads? Pois, multiprocessadores est\u00e1 totalmente relacionado aos cores da m\u00e1quina e os m\u00faltiplos processos do Python tem muito overhead. Ent\u00e3o utilizamos Multithreaded Web Scraping, pois pode executar tasks concorrentes atrav\u00e9s de m\u00faltiplas threads no mesmo processo, e essas tasks podem ser executadas enquanto o Python est\u00e1 sendo executado, e essas threadss\u00e3o executadas as\u00edncronamente. with ThreadPoolExecutor(max_workers=5) as executor: futures = [executor.submit(scrapping_movie_page, url) for url in movieList] results = [] for result in futures: results.append(result) No c\u00f3digo definimos que o c\u00f3dio iria rodar com 5 threads, definido pelo max_workers. Depois da execu\u00e7\u00e3o do c\u00f3digo, verificamos o n\u00famero de threads que est\u00e3o rodando e o gerenciamento de mem\u00f3ria em no sistema operacional Arch.","title":"Porque usamos Multithreads ao inves do Multiprocessors?"},{"location":"entrega03/","text":"Software, scripts e comandos Unix asdsadsd Scripts Comandos Unix mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Terceira Entrega - Software, scripts e comandos Unix"},{"location":"entrega03/#software-scripts-e-comandos-unix","text":"asdsadsd","title":"Software, scripts e comandos Unix"},{"location":"entrega03/#scripts","text":"","title":"Scripts"},{"location":"entrega03/#comandos-unix","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Comandos Unix"},{"location":"entrega04/","text":"Gerenciamento de mem\u00f3ria O software foi desenvolvido funcionar\u00e1 local. Ser\u00e1 necess\u00e1rio o usu\u00e1rio baixar o projeto no github e rodar o main.py e dar input conforme a apresenta\u00e7\u00e3o do menu. N\u00e3o ser\u00e1 necess\u00e1rio a preocupa\u00e7\u00e3o com hardware ou software, pois todas as instala\u00e7\u00f5es necess\u00e1rias j\u00e1 est\u00e3o na venv (virtual environment) do python. Gerencia de mem\u00f3ria O Python disponibiliza um mecanismo de ger\u00eancia de mem\u00f3ria autom\u00e1tico que \u00e9 respons\u00e1vel por alocar e desalocar mem\u00f3ria, esse mecanismo \u00e9 chamado de Garbage Collector.","title":"Quarta Entrega - Gerenciamento de mem\u00f3ria"},{"location":"entrega04/#gerenciamento-de-memoria","text":"O software foi desenvolvido funcionar\u00e1 local. Ser\u00e1 necess\u00e1rio o usu\u00e1rio baixar o projeto no github e rodar o main.py e dar input conforme a apresenta\u00e7\u00e3o do menu. N\u00e3o ser\u00e1 necess\u00e1rio a preocupa\u00e7\u00e3o com hardware ou software, pois todas as instala\u00e7\u00f5es necess\u00e1rias j\u00e1 est\u00e3o na venv (virtual environment) do python.","title":"Gerenciamento de mem\u00f3ria"},{"location":"entrega04/#gerencia-de-memoria","text":"O Python disponibiliza um mecanismo de ger\u00eancia de mem\u00f3ria autom\u00e1tico que \u00e9 respons\u00e1vel por alocar e desalocar mem\u00f3ria, esse mecanismo \u00e9 chamado de Garbage Collector.","title":"Gerencia de mem\u00f3ria"},{"location":"entrega05/","text":"Sistemas de arquivos e E/S Ap\u00f3s a execu\u00e7\u00e3o do programa \u00e9 gerado um arquivo lista_filmes.csv contendo os nomes dos filmes e nota da audi\u00eancia. O arquivo \u00e9 gerado no diret\u00f3rio do projeto. E ordenado por ordem crescente pelo comando: sort -t\",\" -k2 lista_filmes.csv o comando \"-k2\" ordena por coluna, no caso do nosso projeto, ele est\u00e1 ordenando a 2 coluna do arquivo .csv, ou seja, pela nota da audi\u00eancia.","title":"Quinta Entrega - Sistemas de arquivos e E/S"},{"location":"entrega05/#sistemas-de-arquivos-e-es","text":"Ap\u00f3s a execu\u00e7\u00e3o do programa \u00e9 gerado um arquivo lista_filmes.csv contendo os nomes dos filmes e nota da audi\u00eancia. O arquivo \u00e9 gerado no diret\u00f3rio do projeto. E ordenado por ordem crescente pelo comando: sort -t\",\" -k2 lista_filmes.csv o comando \"-k2\" ordena por coluna, no caso do nosso projeto, ele est\u00e1 ordenando a 2 coluna do arquivo .csv, ou seja, pela nota da audi\u00eancia.","title":"Sistemas de arquivos e E/S"}]}